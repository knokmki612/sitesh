#!/bin/sh
VERSION='0.0.1'
exec_dir=$(cd $(dirname "$0") && pwd)

if [ ! -d ~/.sitesh ]; then
	mkdir -p ~/.sitesh/templates
fi
cd ~/.sitesh

usage() {
	cat <<- +
		usage: site version
		            add
		            make
		            show
		            edit
		            switch
		            remove
	+
}

current_conf() {
	. ./site.conf
	echo ""
	echo "current selected site: $URL"
}

input() {
	case $1 in
		URL)
			input_msg="url: "
			condition="echo \$URL | grep -sq 'http\?://'"
			error_msg="please set url (http or https)"
			;;
		SSH_HOST)
			input_msg="ssh host: "
			condition="true"
			;;
		SSH_KEY)
			input_msg="ssh key: "
			condition="[ -f \$(eval echo \$SSH_KEY) ]"
			error_msg="please set corresponded ssh key"
			;;
		SERVER_PATH)
			input_msg="server path: "
			condition="echo \$SERVER_PATH | grep -sq '^/'"
			error_msg="please set absolute path for use in site"
			;;
		POSTS)
			input_msg="posts dir: $(eval echo $SERVER_PATH)"
			condition="true"
			;;
		SITE_TEMPLATE)
			input_msg="template: "
			condition="[ -d \$(eval echo $exec_dir/../share/sitesh/templates/\$SITE_TEMPLATE) ] || [ -d \$(eval echo ~/.sitesh/templates/\$SITE_TEMPLATE) ]"
			error_msg="please choose available template"
			;;
		*)
			input_msg="$1: "
			condition="true"
			;;
	esac
	while true; do
		env echo -n "$input_msg"
		read $1
		if eval $condition; then
			break
		else
			echo $error_msg
		fi
	done
	if [ $1 = URL ] || [ $1 = SERVER_PATH ] || [ $1 = POSTS ]; then
		eval $1=$(eval echo \$$1 | sed 's/\/\?$/\//')
	fi
}

generate_conf() {
	if [ -f $1 ]; then
		. ./$1
		input $2
	else
		input URL
		input SSH_HOST
		input SSH_KEY
		input SERVER_PATH
		input POSTS
		input SITE_TEMPLATE
	fi
	cat <<- + > $1
		export URL="$URL"
		export DOMAIN=$(echo $URL | cut -d ':' -f 2 | tr -d '/')
		export SSH_HOST="$SSH_HOST"
		export SSH_KEY="$SSH_KEY"
		export SERVER_PATH="$SERVER_PATH"
		export POSTS="$POSTS"
		export SITE_TEMPLATE="$SITE_TEMPLATE"
	+
}

list_conf() {
	number=1
	list=$(
		echo "no. url hostname"
		while [ -f ${number}.conf ]; do
			. ./${number}.conf
			echo "$number $URL $SSH_HOST"
			number=$(($number + 1))
		done)
	if [ $(echo "$list" | wc -l) -eq 1 ]; then
		echo 'please configure any site'
		exit 1
	fi
	echo "$list" | column -t
}

select_conf() {
	list_conf
	while true; do
		env echo -en "\nselect $1 site of number (q for quit): "
		read number
		if [ $number = 'q' ]; then
			exit 0
		elif ! echo $number | grep -sqE '^[0-9]+$'; then
			echo 'wrong number'
		elif [ ! -f ${number}.conf ]; then
			echo 'wrong number'
		else
			break
		fi
	done
}

add() {
	new_number=1
	while [ -f ${new_number}.conf ]; do
		new_number=$(($new_number + 1))
	done
	new_conf=${new_number}.conf
	generate_conf $new_conf
	if [ ! -f site.conf ]; then
		cat <<- + > site.conf
			. ~/.sitesh/$new_conf
		+
	fi
	current_conf
}

make() {
	select_conf make
	. ./${number}.conf
	echo ""
	input owner
	input name
	input description
	apache_conf=$(. $exec_dir/../share/sitesh/templates/apache-2.4.conf.example.sh)
	eval $(ssh-agent)
	trap 'eval $(ssh-agent -k); exit 1' 1 2 3 15
	eval ssh-add $SSH_KEY
	ssh -t $SSH_HOST "
		if ! type git > /dev/null 2>&1; then
			echo 'required git, abort'
			exit 1
		fi
		if [ ! -d $SERVER_PATH ]; then
			sudo mkdir $SERVER_PATH
			sudo chown \$USER:\$USER $SERVER_PATH
		fi
		if [ \$(find $SERVER_PATH | wc -l) -ne 1 ]; then
			echo 'this directory is already used, abort'
			exit 1
		fi
		cd $SERVER_PATH
		mkdir $POSTS preview cache jobs
		echo \"$apache_conf\" > apache-2.4.conf.example
		cat <<- + > site.conf
			export URL=\"$URL\"
			export POSTS=\"$POSTS\"
			export COPYRIGHT_OWNER=\"$owner\"
			export SITE_NAME=\"$name\"
			export SITE_DESCRIPTION=\"$description\"
			export TITLE_TAIL=\" - \\\$SITE_NAME\"
			export TITLE_TAIL_ENCODED=\\\$(
			  echo \"\\\$TITLE_TAIL\" |
			  nkf -WwMQ               |
			  sed 's/=$//'            |
			  tr -d '\n'              |
			  tr = %)
		+
		exit 0"
	if [ $? -ne 0 ]; then
		exit 1
	fi
	if [ -d "~/.sitesh/templates/$SITE_TEMPLATE" ]; then
		template="~/.sitesh/templates/$SITE_TEMPLATE/"
	elif [ -d "$exec_dir/../share/sitesh/templates/$SITE_TEMPLATE" ]; then
		template="$exec_dir/../share/sitesh/templates/$SITE_TEMPLATE/"
	else
		echo 'template not found'
		exit 1
	fi
	rsync -auvz -e ssh $template $SSH_HOST:$SERVER_PATH
	ssh $SSH_HOST "
		cd $SERVER_PATH
		git init
		if [ ! -f ~/.gitconfig ]; then
			env echo -n 'git user name: '
			read gitname
			env echo -n 'git user email: '
			read gitemail
			git config user.name \"$gitname\"
			git config user.email \"$gitemail\"
		fi
		git add .
		git commit -m \"skeleton site is opened\""
	eval $(ssh-agent -k)
}

show() {
	select_conf show
	. ./${number}.conf
	echo ""
	cat <<- + | column -t -s ','
		url:,$URL
		ssh host:,$SSH_HOST
		ssh key:,$SSH_KEY
		server path:,$SERVER_PATH
		posts dir:,$POSTS
		template:,$SITE_TEMPLATE
	+
	current_conf
}

edit() {
	select_conf edit
	while true; do
		. ./${number}.conf
		echo ""
		cat <<- + | column -t -s ','
			1,url:,$URL
			2,ssh host:,$SSH_HOST
			3,ssh key:,$SSH_KEY
			4,server path:,$SERVER_PATH
			5,posts dir:,$POSTS
			6,template:,$SITE_TEMPLATE
		+
		env echo -en '\nselect element (q for quit): '
		read element
		case $element in
			1)
				generate_conf ${number}.conf URL
				;;
			2)
				generate_conf ${number}.conf SSH_HOST
				;;
			3)
				generate_conf ${number}.conf SSH_KEY
				;;
			4)
				generate_conf ${number}.conf SERVER_PATH
				;;
			5)
				generate_conf ${number}.conf POSTS
				;;
			6)
				generate_conf ${number}.conf SITE_TEMPLATE
				;;
			q)
				exit 0
				;;
			*)
				;;
		esac
	done
	current_conf
}

switch() {
	select_conf switch
	cat <<- + > site.conf
		. ~/.sitesh/${number}.conf
	+
	current_conf
}

remove() {
	select_conf remove
	rm ${number}.conf
	while [ -f $(($number + 1)).conf ]; do
		mv $(($number + 1)).conf ${number}.conf
	done
	rm site.conf
	if [ -f 1.conf ]; then
		echo ""
		switch
	fi
}

if [ $# -eq 0 ]; then
	usage
fi

while [ $# -gt 0 ]; do
	case $1 in
		version)
			echo "version: $VERSION"
			exit 0
			;;
		add)
			add
			exit 0
			;;
		make)
			make
			exit 0
			;;
		show)
			show
			exit 0
			;;
		edit)
			edit
			exit 0
			;;
		switch)
			switch
			exit 0
			;;
		remove)
			remove
			exit 0
			;;
		*)
			usage
			exit 0
			;;
	esac
	shift
done
