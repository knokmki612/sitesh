#!/bin/sh
VERSION='0.0.1'

if [ ! -d ~/.site ]; then
	mkdir ~/.site
fi
cd ~/.site

usage() {
	cat <<- +
		usage: site version
		            add
		            make
		            show
		            edit
		            switch
		            remove
	+
}

current_conf() {
	. ./site.conf
	echo ""
	echo "current selected site: $SITE_URL"
}

input() {
	case $1 in
		SITE_URL)
			input_msg="url: "
			condition="echo \$SITE_URL | grep -sq 'http\?://'"
			error_msg="please set url (http or https)"
			;;
		SITE_DOMAIN)
			input_msg="ssh host: "
			condition="true"
			;;
		SITE_SSH_KEY)
			input_msg="ssh key: "
			condition="[ -f \$(eval echo \$SITE_SSH_KEY) ]"
			error_msg="please set corresponded ssh key"
			;;
		SITE_ABSOLUTE_PATH)
			input_msg="server path: "
			condition="echo \$SITE_ABSOLUTE_PATH | grep -sq '^/'"
			error_msg="please set absolute path for use in site"
			;;
		SITE_POSTS_DIR)
			input_msg="posts dir: $(eval echo $SITE_ABSOLUTE_PATH)"
			condition="true"
			;;
		*)
			input_msg="$1: "
			condition="true"
			;;
	esac
	while true; do
		env echo -n "$input_msg"
		read $1
		if eval $condition; then
			break
		else
			echo $error_msg
		fi
	done
	if [ $1 = SITE_URL ] || [ $1 = SITE_ABSOLUTE_PATH ] || [ $1 = SITE_POSTS_DIR ]; then
		eval $1=$(eval echo \$$1 | sed 's/\/\?$/\//')
	fi
}

generate_conf() {
	if [ -f $1 ]; then
		. ./$1
		input $2
	else
		input SITE_URL
		input SITE_DOMAIN
		input SITE_SSH_KEY
		input SITE_ABSOLUTE_PATH
		input SITE_POSTS_DIR
	fi
	cat <<- + > $1
		export SITE_URL="$SITE_URL"
		export SITE_DOMAIN="$SITE_DOMAIN"
		export SITE_SSH_KEY="$SITE_SSH_KEY"
		export SITE_ABSOLUTE_PATH="$SITE_ABSOLUTE_PATH"
		export SITE_POSTS_DIR="$SITE_POSTS_DIR"
	+
}

list_conf() {
	number=1
	list=$(
		echo "no. url hostname"
		while [ -f ${number}.conf ]; do
			. ./${number}.conf
			echo "$number $SITE_URL $SITE_DOMAIN"
			number=$(($number + 1))
		done)
	if [ $(echo "$list" | wc -l) -eq 1 ]; then
		echo 'please configure any site'
		exit 1
	fi
	echo "$list" | column -t
}

select_conf() {
	list_conf
	while true; do
		env echo -en "\nselect $1 site of number (q for quit): "
		read number
		if [ $number = 'q' ]; then
			exit 0
		elif ! echo $number | grep -sqE '^[0-9]+$'; then
			echo 'wrong number'
		elif [ ! -f ${number}.conf ]; then
			echo 'wrong number'
		else
			break
		fi
	done
}

add() {
	new_number=1
	while [ -f ${new_number}.conf ]; do
		new_number=$(($new_number + 1))
	done
	new_conf=${new_number}.conf
	generate_conf $new_conf
	if [ ! -f site.conf ]; then
		cat <<- + > site.conf
			. ~/.site/$new_conf
		+
	fi
	current_conf
}

make() {
	select_conf make
	. ./${number}.conf
	echo ""
	input author
	input name
	input description
	eval $(ssh-agent)
	trap 'eval $(ssh-agent -k); exit 1' 1 2 3 15
	eval ssh-add $SITE_SSH_KEY
	ssh -t $SITE_DOMAIN "
		if ! type git > /dev/null 2>&1; then
			echo 'required git, abort'
			exit 1
		fi
		if [ ! -d $SITE_ABSOLUTE_PATH ]; then
			sudo mkdir $SITE_ABSOLUTE_PATH
			sudo chown \$USER:\$USER $SITE_ABSOLUTE_PATH
		fi
		if [ \$(find $SITE_ABSOLUTE_PATH | wc -l) -ne 1 ]; then
			echo 'this directory is already used, abort'
			exit 1
		fi
		cd $SITE_ABSOLUTE_PATH
		mkdir $SITE_POSTS_DIR
		cat <<- + > site.conf
			export SITE_URL=\"$SITE_URL\"
			export SITE_POSTS_DIR=\"$SITE_POSTS_DIR\"
			export SITE_AUTHOR=\"$author\"
			export SITE_NAME=\"$name\"
			export SITE_DESCRIPTION=\"$description\"
			export SITE_TITLE_TAIL=\" - \\\$SITE_NAME\"
			export SITE_TITLE_TAIL_ENCODED=\\\$(
			  echo \"\\\$SITE_TITLE_TAIL\" |
			  nkf -WwMQ               |
			  sed 's/=$//'            |
			  tr -d '\n'              |
			  tr = %)
		+
		exit 0"
	if [ $? -ne 0 ]; then
		exit 1
	fi
#		rsync -auvz -e ssh ~/Documents/site-script/theme/ $SITE_DOMAIN:$SITE_ABSOLUTE_PATH
	ssh $SITE_DOMAIN "
		cd $SITE_ABSOLUTE_PATH
		git init
		if [ ! -f ~/.gitconfig ]; then
			env echo -n 'git user name: '
			read gitname
			env echo -n 'git user email: '
			read gitemail
			git config user.name \"$gitname\"
			git config user.email \"$gitemail\"
		fi
		git add .
		git commit -m \"skeleton site is opened\""
	eval $(ssh-agent -k)
}

show() {
	select_conf show
	. ./${number}.conf
	echo ""
	cat <<- + | column -t -s ','
		url:,$SITE_URL
		ssh host:,$SITE_DOMAIN
		ssh key:,$SITE_SSH_KEY
		server path:,$SITE_ABSOLUTE_PATH
		posts dir:,$SITE_POSTS_DIR
	+
	current_conf
}

edit() {
	select_conf edit
	while true; do
		. ./${number}.conf
		echo ""
		cat <<- + | column -t -s ','
			1,url:,$SITE_URL
			2,ssh host:,$SITE_DOMAIN
			3,ssh key:,$SITE_SSH_KEY
			4,server path:,$SITE_ABSOLUTE_PATH
			5,posts dir:,$SITE_POSTS_DIR
		+
		env echo -en '\nselect element (q for quit): '
		read element
		case $element in
			1)
				generate_conf ${number}.conf SITE_URL
				;;
			2)
				generate_conf ${number}.conf SITE_DOMAIN
				;;
			3)
				generate_conf ${number}.conf SITE_SSH_KEY
				;;
			4)
				generate_conf ${number}.conf SITE_ABSOLUTE_PATH
				;;
			5)
				generate_conf ${number}.conf SITE_POSTS_DIR
				;;
			q)
				exit 0
				;;
			*)
				;;
		esac
	done
	current_conf
}

switch() {
	select_conf switch
	cat <<- + > site.conf
		. ~/.site/${number}.conf
	+
	current_conf
}

remove() {
	select_conf remove
	rm ${number}.conf
	while [ -f $(($number + 1)).conf ]; do
		mv $(($number + 1)).conf ${number}.conf
	done
	rm site.conf
	if [ -f 1.conf ]; then
		echo ""
		switch
	fi
}

while [ $# -gt 0 ]; do
	case $1 in
		version)
			echo "version: $VERSION"
			exit 0
			;;
		add)
			add
			exit 0
			;;
		make)
			make
			exit 0
			;;
		show)
			show
			exit 0
			;;
		edit)
			edit
			exit 0
			;;
		switch)
			switch
			exit 0
			;;
		remove)
			remove
			exit 0
			;;
		*)
			usage
			exit 0
			;;
	esac
	shift
done
